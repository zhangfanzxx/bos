<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:jaxrs="http://cxf.apache.org/jaxrs"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:task="http://www.springframework.org/schema/task"
	   xsi:schemaLocation="
 						http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
						http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/data/jpa
						http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

<!--
    #########################################################
    指定连接池配置
    #########################################################
-->
<context:property-placeholder location="classpath:jdbc.properties"/>

<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	<property name="driverClass" value="${OracleDriverClass}" />
	<property name="jdbcUrl" value="${OracleJdbcUrl}" />
	<property name="user" value="${OracleUser}" />
	<property name="password" value="${OraclePassword}" />
</bean>
<!-- spring整合JPA -->
<!-- 等价于以前配置的LocalSessionFactoryBean -->
<bean id="entityManagerFactory"
	  class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
	<property name="jpaPropertyMap">
		<map>
			<entry key="hibernate.hbm2ddl.auto" value="update"/>
			<entry key="hibernate.default_schema" value="zzff" />
			<entry key="hibernate.format_sql" value="ture" />
			<entry key="hibernate.show_sql" value="true"/>
			<entry key="hibernate.dialect" value="org.hibernate.dialect.Oracle10gDialect"/>
		</map>
	</property>
	<property name="dataSource" ref="dataSource" />
	<!--
        #########################################################
        指定JPA扫描的实体类所在的包
        #########################################################
    -->
	<property name="packagesToScan" value="com.itheima.*.domain" />
	<!-- 指定持久层提供者为Hibernate -->
	<property name="persistenceProvider">
		<bean class="org.hibernate.ejb.HibernatePersistence" />
	</property>
	<property name="jpaVendorAdapter">
		<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
			<!-- 自动建表 -->
			<!--<property name="generateDdl" value="true" />
            <property name="database" value="ORACLE" />
            <property name="showSql" value="true" />-->
		</bean>
	</property>
	<property name="jpaDialect">
		<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
	</property>
</bean>

<!-- 配置事务管理器 -->
<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
	<property name="entityManagerFactory" ref="entityManagerFactory" />
</bean>

<!--
    #########################################################
    开启IOC注解.
    指定Spring进行扫描的包，如果该包中的类使用了@Component @Controller@Service等注解，会把这些类注册为bean
    ！！！！不要扫描DAO ！！！！
    DAO包下的类要使用Spring Data JPA框架进行扫描
    #########################################################
-->
<context:component-scan base-package="com.itheima.bos.service,com.itheima.bos.web" />

<!-- 开启事务注解 -->
<tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"/>
<!--
    #########################################################
    指定Spring Data JPA要进行扫描的包,该包中的类框架会自动为其创建代理
    #########################################################
-->
<jpa:repositories base-package="com.itheima.bos.dao" />
	<jaxrs:server address="/orderservice">
		<jaxrs:serviceBeans>
			<ref bean="orderServiceImpl" />
		</jaxrs:serviceBeans>
		<jaxrs:inInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingInInterceptor"></bean>
		</jaxrs:inInterceptors>
		<jaxrs:outInterceptors>
			<bean class="org.apache.cxf.interceptor.LoggingOutInterceptor"></bean>
		</jaxrs:outInterceptors>
	</jaxrs:server>
	<bean id="shirofilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.html" />
		<property name="successUrl" value="/index.html" />
		<property name="unauthorizedUrl" value="/unauthorized.html" />
		<property name="filterChainDefinitions">
			<value>
				/css/* = anon
				/images/* =anon
				/js/** = anon
				/validatecode.jsp* = anon
				/userAction_login.action = anon
				/courierAction_pageQuery = perms["courier_deltag"]
				/** = anon
			</value>
		</property>
	</bean>
	<!--authc -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm"></property>
	</bean>
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">

		<property name="proxyTargetClass" value="true"></property>
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"></property>
	</bean>
</beans>